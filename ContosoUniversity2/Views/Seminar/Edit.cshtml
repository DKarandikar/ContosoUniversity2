@model ContosoUniversity2.Models.Seminar

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Seminar</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SeminarID)

        <div class="form-group">
            @Html.LabelFor(model => model.SeminarTime, "Seminar Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SeminarTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SeminarTime, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.ValidationMessage("CourseOverlap")
        @Html.ValidationMessage("StudentOverlap")

        <div class="form-group">
            @Html.LabelFor(model => model.SeminarLength, "Seminar Length", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SeminarLength, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SeminarLength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, "Location", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.ValidationMessage("LocationOverlap")

        <div class="form-group">
            <label class="control-label col-md-2" for="CourseID">Instructor</label>
            <div class="col-md-10">
                @Html.DropDownList("InstructorID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.InstructorID, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.ValidationMessage("InstructorOverlap")

        <div>
            <dl class="dl-horizontal">
                <dt>
                    Course
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Course.Title)
                </dd>
                <dt>
                    Students
                </dt>
                <dd>
                    @{
                        foreach (var student in Model.Students)
                        {
                            @student.FullName <br />
                        }
                    }
                </dd>
            </dl>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
